module wasm2wat.model.results.operator;

import std.typecons : Nullable;

import wasm2wat.model.operator.code : OperatorCode;

// ==========================================

struct MemoryAddress
{
  int flags;
  int offset;
}

struct OperationInformationLiteralType
{
}

@BinaryReaderResult struct OperatorInformation(T = long)
{
  OperatorCode code;

  Nullable!T literal;
  Nullable!int lineIndex;
  Nullable!ubyte[] lines;
  Nullable!int blockType;

  Nullable!int[] brTable;
  Nullable!int brDepth;
  Nullable!MemoryAddress memoryAddress;
  Nullable!int funcIndex;
  Nullable!int typeIndex;

  Nullable!int tableIndex;
  Nullable!int localIndex;
  Nullable!int globalIndex;
  Nullable!int segmentIndex;
  Nullable!int destinationIndex;

  invariant
  {
    assert(is(T == int) || is(T == long) || is(T == ubyte[]));
  }
}

// ==========================================

struct CodeAttr
{
  string name;
}

enum OperatorCode
{
  @CodeAttr("unreachable") UNREACHABLE = 0x00,
  @CodeAttr("nop") NOP = 0x01,
  @CodeAttr("block") BLOCK = 0x02,
  @CodeAttr("loop") LOOP = 0x03,
  @CodeAttr("if") IF = 0x04,
  @CodeAttr("else") ELSE = 0x05,

  @CodeAttr("end") END = 0x0b,
  @CodeAttr("br") BR = 0x0c,
  @CodeAttr("br_if") BR_IF = 0x0d,
  @CodeAttr("br_table") BR_TABLE = 0x0e,
  @CodeAttr("return") RETURN = 0x0f,
  @CodeAttr("call") CALL = 0x10,
  @CodeAttr("call_indirect") CALL_INDIRECT = 0x11,
  @CodeAttr("return_call") RETURN_CALL = 0x12,
  @CodeAttr("return_call_indirect") RETURN_CALL_INDIRECT = 0x13,

  @CodeAttr("drop") DROP = 0x1a,
  @CodeAttr("select") SELECT = 0x1b,

  @CodeAttr("local.get") LOCAL_GET = 0x20,
  @CodeAttr("local.set") LOCAL_SET = 0x21,
  @CodeAttr("local.tee") LOCAL_TEE = 0x22,
  @CodeAttr("global.get") GLOBAL_GET = 0x23,
  @CodeAttr("global.set") GLOBAL_SET = 0x24,
  @CodeAttr("table.get") TABLE_GET = 0x25,
  @CodeAttr("table.set") TABLE_SET = 0x26,

  @CodeAttr("i32.load") I32_LOAD = 0x28,
  @CodeAttr("i64.load") I64_LOAD = 0x29,
  @CodeAttr("f32.load") F32_LOAD = 0x2a,
  @CodeAttr("f64.load") F64_LOAD = 0x2b,
  @CodeAttr("i32.load8_s") I32_LOAD8_S = 0x2c,
  @CodeAttr("i32.load8_u") I32_LOAD8_U = 0x2d,
  @CodeAttr("i32.load16_s") I32_LOAD16_S = 0x2e,
  @CodeAttr("i32.load16_u") I32_LOAD16_U = 0x2f,
  @CodeAttr("i64.load8_s") I64_LOAD8_S = 0x30,
  @CodeAttr("i64.load8_u") I64_LOAD8_U = 0x31,
  @CodeAttr("i64.load16_s") I64_LOAD16_S = 0x32,
  @CodeAttr("i64.load16_u") I64_LOAD16_U = 0x33,
  @CodeAttr("i64.load32_s") I64_LOAD32_S = 0x34,
  @CodeAttr("i64.load32_u") I64_LOAD32_U = 0x35,
  @CodeAttr("i32.store") I32_STORE = 0x36,
  @CodeAttr("i64.store") I64_STORE = 0x37,
  @CodeAttr("f32.store") F32_STORE = 0x38,
  @CodeAttr("f64.store") F64_STORE = 0x39,
  @CodeAttr("i32.store8") I32_STORE8 = 0x3a,
  @CodeAttr("i32.store16") I32_STORE16 = 0x3b,
  @CodeAttr("i64.store8") I64_STORE8 = 0x3c,
  @CodeAttr("i64.store16") I64_STORE16 = 0x3d,
  @CodeAttr("i64.store32") I64_STORE32 = 0x3e,
  @CodeAttr("current_memory") CURRENT_MEMORY = 0x3f,
  @CodeAttr("memory.grow") GROW_MEMORY = 0x40,
  @CodeAttr("i32.const") I32_CONST = 0x41,
  @CodeAttr("i64.const") I64_CONST = 0x42,
  @CodeAttr("f32.const") F32_CONST = 0x43,
  @CodeAttr("f64.const") F64_CONST = 0x44,
  @CodeAttr("i32.eqz") I32_EQZ = 0x45,
  @CodeAttr("i32.eq") I32_EQ = 0x46,
  @CodeAttr("i32.ne") I32_NE = 0x47,
  @CodeAttr("i32.lt_s") I32_LT_S = 0x48,
  @CodeAttr("i32.lt_u") I32_LT_U = 0x49,
  @CodeAttr("i32.gt_s") I32_GT_S = 0x4a,
  @CodeAttr("i32.gt_u") I32_GT_U = 0x4b,
  @CodeAttr("i32.le_s") I32_LE_S = 0x4c,
  @CodeAttr("i32.le_u") I32_LE_U = 0x4d,
  @CodeAttr("i32.ge_s") I32_GE_S = 0x4e,
  @CodeAttr("i32.ge_u") I32_GE_U = 0x4f,
  @CodeAttr("i64.eqz") I64_EQZ = 0x50,
  @CodeAttr("i64.eq") I64_EQ = 0x51,
  @CodeAttr("i64.ne") I64_NE = 0x52,
  @CodeAttr("i64.lt_s") I64_LT_S = 0x53,
  @CodeAttr("i64.lt_u") I64_LT_U = 0x54,
  @CodeAttr("i64.gt_s") I64_GT_S = 0x55,
  @CodeAttr("i64.gt_u") I64_GT_U = 0x56,
  @CodeAttr("i64.le_s") I64_LE_S = 0x57,
  @CodeAttr("i64.le_u") I64_LE_U = 0x58,
  @CodeAttr("i64.ge_s") I64_GE_S = 0x59,
  @CodeAttr("i64.ge_u") I64_GE_U = 0x5a,
  @CodeAttr("f32.eq") F32_EQ = 0x5b,
  @CodeAttr("f32.ne") F32_NE = 0x5c,
  @CodeAttr("f32.lt") F32_LT = 0x5d,
  @CodeAttr("f32.gt") F32_GT = 0x5e,
  @CodeAttr("f32.le") F32_LE = 0x5f,
  @CodeAttr("f32.ge") F32_GE = 0x60,
  @CodeAttr("f64.eq") F64_EQ = 0x61,
  @CodeAttr("f64.ne") F64_NE = 0x62,
  @CodeAttr("f64.lt") F64_LT = 0x63,
  @CodeAttr("f64.gt") F64_GT = 0x64,
  @CodeAttr("f64.le") F64_LE = 0x65,
  @CodeAttr("f64.ge") F64_GE = 0x66,
  @CodeAttr("i32.clz") I32_CLZ = 0x67,
  @CodeAttr("i32.ctz") I32_CTZ = 0x68,
  @CodeAttr("i32.popcnt") I32_POPCNT = 0x69,
  @CodeAttr("i32.add") I32_ADD = 0x6a,
  @CodeAttr("i32.sub") I32_SUB = 0x6b,
  @CodeAttr("i32.mul") I32_MUL = 0x6c,
  @CodeAttr("i32.div_s") I32_DIV_S = 0x6d,
  @CodeAttr("i32.div_u") I32_DIV_U = 0x6e,
  @CodeAttr("i32.rem_s") I32_REM_S = 0x6f,
  @CodeAttr("i32.rem_u") I32_REM_U = 0x70,
  @CodeAttr("i32.and") I32_AND = 0x71,
  @CodeAttr("i32.or") I32_OR = 0x72,
  @CodeAttr("i32.xor") I32_XOR = 0x73,
  @CodeAttr("i32.shl") I32_SHL = 0x74,
  @CodeAttr("i32.shr_s") I32_SHR_S = 0x75,
  @CodeAttr("i32.shr_u") I32_SHR_U = 0x76,
  @CodeAttr("i32.rotl") I32_ROTL = 0x77,
  @CodeAttr("i32.rotr") I32_ROTR = 0x78,
  @CodeAttr("i64.clz") I64_CLZ = 0x79,
  @CodeAttr("i64.ctz") I64_CTZ = 0x7a,
  @CodeAttr("i64.popcnt") I64_POPCNT = 0x7b,
  @CodeAttr("i64.add") I64_ADD = 0x7c,
  @CodeAttr("i64.sub") I64_SUB = 0x7d,
  @CodeAttr("i64.mul") I64_MUL = 0x7e,
  @CodeAttr("i64.div_s") I64_DIV_S = 0x7f,
  @CodeAttr("i64.div_u") I64_DIV_U = 0x80,
  @CodeAttr("i64.rem_s") I64_REM_S = 0x81,
  @CodeAttr("i64.rem_u") I64_REM_U = 0x82,
  @CodeAttr("i64.and") I64_AND = 0x83,
  @CodeAttr("i64.or") I64_OR = 0x84,
  @CodeAttr("i64.xor") I64_XOR = 0x85,
  @CodeAttr("i64.shl") I64_SHL = 0x86,
  @CodeAttr("i64.shr_s") I64_SHR_S = 0x87,
  @CodeAttr("i64.shr_u") I64_SHR_U = 0x88,
  @CodeAttr("i64.rotl") I64_ROTL = 0x89,
  @CodeAttr("i64.rotr") I64_ROTR = 0x8a,
  @CodeAttr("f32.abs") F32_ABS = 0x8b,
  @CodeAttr("f32.neg") F32_NEG = 0x8c,
  @CodeAttr("f32.ceil") F32_CEIL = 0x8d,
  @CodeAttr("f32.floor") F32_FLOOR = 0x8e,
  @CodeAttr("f32.trunc") F32_TRUNC = 0x8f,
  @CodeAttr("f32.nearest") F32_NEAREST = 0x90,
  @CodeAttr("f32.sqrt") F32_SQRT = 0x91,
  @CodeAttr("f32.add") F32_ADD = 0x92,
  @CodeAttr("f32.sub") F32_SUB = 0x93,
  @CodeAttr("f32.mul") F32_MUL = 0x94,
  @CodeAttr("f32.div") F32_DIV = 0x95,
  @CodeAttr("f32.min") F32_MIN = 0x96,
  @CodeAttr("f32.max") F32_MAX = 0x97,
  @CodeAttr("f32.copysign") F32_COPYSIGN = 0x98,
  @CodeAttr("f64.abs") F64_ABS = 0x99,
  @CodeAttr("f64.neg") F64_NEG = 0x9a,
  @CodeAttr("f64.ceil") F64_CEIL = 0x9b,
  @CodeAttr("f64.floor") F64_FLOOR = 0x9c,
  @CodeAttr("f64.trunc") F64_TRUNC = 0x9d,
  @CodeAttr("f64.nearest") F64_NEAREST = 0x9e,
  @CodeAttr("f64.sqrt") F64_SQRT = 0x9f,
  @CodeAttr("f64.add") F64_ADD = 0xa0,
  @CodeAttr("f64.sub") F64_SUB = 0xa1,
  @CodeAttr("f64.mul") F64_MUL = 0xa2,
  @CodeAttr("f64.div") F64_DIV = 0xa3,
  @CodeAttr("f64.min") F64_MIN = 0xa4,
  @CodeAttr("f64.max") F64_MAX = 0xa5,
  @CodeAttr("f64.copysign") F64_COPYSIGN = 0xa6,
  @CodeAttr("i32.wrap_i64") I32_WRAP_I64 = 0xa7,
  @CodeAttr("i32.trunc_f32_s") I32_TRUNC_F32_S = 0xa8,
  @CodeAttr("i32.trunc_f32_u") I32_TRUNC_F32_U = 0xa9,
  @CodeAttr(
      "i32.trunc_f64_s") I32_TRUNC_F64_S = 0xaa,
  @CodeAttr("i32.trunc_f64_u") I32_TRUNC_F64_U = 0xab,
  @CodeAttr("i64.extend_i32_s") I64_EXTEND_I32_S = 0xac,
  @CodeAttr("i64.extend_i32_u") I64_EXTEND_I32_U = 0xad,
  @CodeAttr(
      "i64.trunc_f32_s") I64_TRUNC_F32_S = 0xae,
  @CodeAttr("i64.trunc_f32_u") I64_TRUNC_F32_U = 0xaf,
  @CodeAttr(
      "i64.trunc_f64_s") I64_TRUNC_F64_S = 0xb0,
  @CodeAttr("i64.trunc_f64_u") I64_TRUNC_F64_U = 0xb1,
  @CodeAttr("f32.convert_i32_s") F32_CONVERT_I32_S = 0xb2,
  @CodeAttr("f32.convert_i32_u") F32_CONVERT_I32_U = 0xb3,
  @CodeAttr(
      "f32.convert_i64_s") F32_CONVERT_I64_S = 0xb4,
  @CodeAttr("f32.convert_i64_u") F32_CONVERT_I64_U = 0xb5,
  @CodeAttr(
      "f32.demote_f64") F32_DEMOTE_F64 = 0xb6,
  @CodeAttr("f64.convert_i32_s") F64_CONVERT_I32_S = 0xb7,
  @CodeAttr("f64.convert_i32_u") F64_CONVERT_I32_U = 0xb8,
  @CodeAttr("f64.convert_i64_s") F64_CONVERT_I64_S = 0xb9,
  @CodeAttr(
      "f64.convert_i64_u") F64_CONVERT_I64_U = 0xba,
  @CodeAttr("f64.promote_f32") F64_PROMOTE_F32 = 0xbb,
  @CodeAttr("i32.reinterpret_f32") I32_REINTERPRET_F32 = 0xbc,
  @CodeAttr(
      "i64.reinterpret_f64") I64_REINTERPRET_F64 = 0xbd,
  @CodeAttr("f32.reinterpret_i32") F32_REINTERPRET_I32 = 0xbe,
  @CodeAttr("f64.reinterpret_i64") F64_REINTERPRET_I64 = 0xbf,
  @CodeAttr("i32.extend8_s") I32_EXTEND8_S = 0xc0,
  @CodeAttr("i32.extend16_s") I32_EXTEND16_S = 0xc1,
  @CodeAttr("i64.extend8_s") I64_EXTEND8_S = 0xc2,
  @CodeAttr("i64.extend16_s") I64_EXTEND16_S = 0xc3,
  @CodeAttr("i64.extend32_s") I64_EXTEND32_S = 0xc4,

  // PREFIX_0XFC = 0xfc,
  // PREFIX_0XFD = 0xfd,
  // PREFIX_0XFE = 0xfe,

  @CodeAttr("i32.trunc_sat_f32_s") I32_TRUNC_SAT_F32_S = 0xfc00,
  @CodeAttr("i32.trunc_sat_f32_u") I32_TRUNC_SAT_F32_U = 0xfc01,
  @CodeAttr("i32.trunc_sat_f64_s") I32_TRUNC_SAT_F64_S = 0xfc02,
  @CodeAttr("i32.trunc_sat_f64_u") I32_TRUNC_SAT_F64_U = 0xfc03,
  @CodeAttr("i64.trunc_sat_f32_s") I64_TRUNC_SAT_F32_S = 0xfc04,
  @CodeAttr("i64.trunc_sat_f32_u") I64_TRUNC_SAT_F32_U = 0xfc05,
  @CodeAttr("i64.trunc_sat_f64_s") I64_TRUNC_SAT_F64_S = 0xfc06,
  @CodeAttr("i64.trunc_sat_f64_u") I64_TRUNC_SAT_F64_U = 0xfc07,

  @CodeAttr("memory.init") MEMORY_INIT = 0xfc08,
  @CodeAttr(
      "data.drop") DATA_DROP = 0xfc09,
  @CodeAttr("memory.copy") MEMORY_COPY = 0xfc0a,
  @CodeAttr("memory.fill") MEMORY_FILL = 0xfc0b,
  @CodeAttr("table.init") TABLE_INIT = 0xfc0c,
  @CodeAttr("elem.drop") ELEM_DROP = 0xfc0d,
  @CodeAttr("table.copy") TABLE_COPY = 0xfc0e,
  @CodeAttr("table.grow") TABLE_GROW = 0xfc0f,
  @CodeAttr("table.size") TABLE_SIZE = 0xfc10,
  @CodeAttr("table.fill") TABLE_FILL = 0xfc11,

  @CodeAttr("ref.null") REF_NULL = 0xd0,
  @CodeAttr("ref.is_null") REF_IS_NULL = 0xd1,
  @CodeAttr("ref.func") REF_FUNC = 0xd2,

  @CodeAttr("memory.atomic.notify") ATOMIC_NOTIFY = 0xfe00,
  @CodeAttr("memory.atomic.wait32") I32_ATOMIC_WAIT = 0xfe01,
  @CodeAttr("memory.atomic.wait64") I64_ATOMIC_WAIT = 0xfe02,
  @CodeAttr("atomic.fence") ATOMIC_FENCE = 0xfe03,

  @CodeAttr("i32.atomic.load") I32_ATOMIC_LOAD = 0xfe10,
  @CodeAttr("i64.atomic.load") I64_ATOMIC_LOAD = 0xfe11,
  @CodeAttr(
      "i32.atomic.load8_u") I32_ATOMIC_LOAD8_U = 0xfe12,
  @CodeAttr("i32.atomic.load16_u") I32_ATOMIC_LOAD16_U = 0xfe13,
  @CodeAttr("i64.atomic.load8_u") I64_ATOMIC_LOAD8_U = 0xfe14,
  @CodeAttr("i64.atomic.load16_u") I64_ATOMIC_LOAD16_U = 0xfe15,
  @CodeAttr("i64.atomic.load32_u") I64_ATOMIC_LOAD32_U = 0xfe16,
  @CodeAttr("i32.atomic.store") I32_ATOMIC_STORE = 0xfe17,
  @CodeAttr("i64.atomic.store") I64_ATOMIC_STORE = 0xfe18,
  @CodeAttr("i32.atomic.store8") I32_ATOMIC_STORE8 = 0xfe19,
  @CodeAttr("i32.atomic.store16") I32_ATOMIC_STORE16 = 0xfe1a,
  @CodeAttr("i64.atomic.store8") I64_ATOMIC_STORE8 = 0xfe1b,
  @CodeAttr("i64.atomic.store16") I64_ATOMIC_STORE16 = 0xfe1c,
  @CodeAttr("i64.atomic.store32") I64_ATOMIC_STORE32 = 0xfe1d,
  @CodeAttr("i32.atomic.rmw.add") I32_ATOMIC_RMW_ADD = 0xfe1e,
  @CodeAttr("i64.atomic.rmw.add") I64_ATOMIC_RMW_ADD = 0xfe1f,
  @CodeAttr("i32.atomic.rmw8.add_u") I32_ATOMIC_RMW8_ADD_U = 0xfe20,
  @CodeAttr("i32.atomic.rmw16.add_u") I32_ATOMIC_RMW16_ADD_U = 0xfe21,
  @CodeAttr("i64.atomic.rmw8.add_u") I64_ATOMIC_RMW8_ADD_U = 0xfe22,
  @CodeAttr("i64.atomic.rmw16.add_u") I64_ATOMIC_RMW16_ADD_U = 0xfe23,
  @CodeAttr("i64.atomic.rmw32.add_u") I64_ATOMIC_RMW32_ADD_U = 0xfe24,
  @CodeAttr("i32.atomic.rmw.sub") I32_ATOMIC_RMW_SUB = 0xfe25,
  @CodeAttr("i64.atomic.rmw.sub") I64_ATOMIC_RMW_SUB = 0xfe26,
  @CodeAttr("i32.atomic.rmw8.sub_u") I32_ATOMIC_RMW8_SUB_U = 0xfe27,
  @CodeAttr("i32.atomic.rmw16.sub_u") I32_ATOMIC_RMW16_SUB_U = 0xfe28,
  @CodeAttr("i64.atomic.rmw8.sub_u") I64_ATOMIC_RMW8_SUB_U = 0xfe29,
  @CodeAttr("i64.atomic.rmw16.sub_u") I64_ATOMIC_RMW16_SUB_U = 0xfe2a,
  @CodeAttr("i64.atomic.rmw32.sub_u") I64_ATOMIC_RMW32_SUB_U = 0xfe2b,
  @CodeAttr("i32.atomic.rmw.and") I32_ATOMIC_RMW_AND = 0xfe2c,
  @CodeAttr("i64.atomic.rmw.and") I64_ATOMIC_RMW_AND = 0xfe2d,
  @CodeAttr("i32.atomic.rmw8.and_u") I32_ATOMIC_RMW8_AND_U = 0xfe2e,
  @CodeAttr("i32.atomic.rmw16.and_u") I32_ATOMIC_RMW16_AND_U = 0xfe2f,
  @CodeAttr("i64.atomic.rmw8.and_u") I64_ATOMIC_RMW8_AND_U = 0xfe30,
  @CodeAttr("i64.atomic.rmw16.and_u") I64_ATOMIC_RMW16_AND_U = 0xfe31,
  @CodeAttr("i64.atomic.rmw32.and_u") I64_ATOMIC_RMW32_AND_U = 0xfe32,
  @CodeAttr("i32.atomic.rmw.or") I32_ATOMIC_RMW_OR = 0xfe33,
  @CodeAttr("i64.atomic.rmw.or") I64_ATOMIC_RMW_OR = 0xfe34,
  @CodeAttr("i32.atomic.rmw8.or_u") I32_ATOMIC_RMW8_OR_U = 0xfe35,
  @CodeAttr("i32.atomic.rmw16.or_u") I32_ATOMIC_RMW16_OR_U = 0xfe36,
  @CodeAttr("i64.atomic.rmw8.or_u") I64_ATOMIC_RMW8_OR_U = 0xfe37,
  @CodeAttr("i64.atomic.rmw16.or_u") I64_ATOMIC_RMW16_OR_U = 0xfe38,
  @CodeAttr("i64.atomic.rmw32.or_u") I64_ATOMIC_RMW32_OR_U = 0xfe39,
  @CodeAttr("i32.atomic.rmw.xor") I32_ATOMIC_RMW_XOR = 0xfe3a,
  @CodeAttr("i64.atomic.rmw.xor") I64_ATOMIC_RMW_XOR = 0xfe3b,
  @CodeAttr("i32.atomic.rmw8.xor_u") I32_ATOMIC_RMW8_XOR_U = 0xfe3c,
  @CodeAttr("i32.atomic.rmw16.xor_u") I32_ATOMIC_RMW16_XOR_U = 0xfe3d,
  @CodeAttr("i64.atomic.rmw8.xor_u") I64_ATOMIC_RMW8_XOR_U = 0xfe3e,
  @CodeAttr("i64.atomic.rmw16.xor_u") I64_ATOMIC_RMW16_XOR_U = 0xfe3f,
  @CodeAttr("i64.atomic.rmw32.xor_u") I64_ATOMIC_RMW32_XOR_U = 0xfe40,
  @CodeAttr("i32.atomic.rmw.xchg") I32_ATOMIC_RMW_XCHG = 0xfe41,
  @CodeAttr("i64.atomic.rmw.xchg") I64_ATOMIC_RMW_XCHG = 0xfe42,
  @CodeAttr("i32.atomic.rmw8.xchg_u") I32_ATOMIC_RMW8_XCHG_U = 0xfe43,
  @CodeAttr("i32.atomic.rmw16.xchg_u") I32_ATOMIC_RMW16_XCHG_U = 0xfe44,
  @CodeAttr("i64.atomic.rmw8.xchg_u") I64_ATOMIC_RMW8_XCHG_U = 0xfe45,
  @CodeAttr("i64.atomic.rmw16.xchg_u") I64_ATOMIC_RMW16_XCHG_U = 0xfe46,
  @CodeAttr("i64.atomic.rmw32.xchg_u") I64_ATOMIC_RMW32_XCHG_U = 0xfe47,
  @CodeAttr("i32.atomic.rmw.cmpxchg") I32_ATOMIC_RMW_CMPXCHG = 0xfe48,
  @CodeAttr("i64.atomic.rmw.cmpxchg") I64_ATOMIC_RMW_CMPXCHG = 0xfe49,
  @CodeAttr("i32.atomic.rmw8.cmpxchg_u") I32_ATOMIC_RMW8_CMPXCHG_U = 0xfe4a,
  @CodeAttr("i32.atomic.rmw16.cmpxchg_u") I32_ATOMIC_RMW16_CMPXCHG_U = 0xfe4b,
  @CodeAttr("i64.atomic.rmw8.cmpxchg_u") I64_ATOMIC_RMW8_CMPXCHG_U = 0xfe4c,
  @CodeAttr("i64.atomic.rmw16.cmpxchg_u") I64_ATOMIC_RMW16_CMPXCHG_U = 0xfe4d,
  @CodeAttr("i64.atomic.rmw32.cmpxchg_u") I64_ATOMIC_RMW32_CMPXCHG_U = 0xfe4e,

  @CodeAttr("v128.load") V128_LOAD = 0xfd00,
  @CodeAttr("i16x8.load8x8_s") I16X8_LOAD8X8_S = 0xfd01,
  @CodeAttr("i16x8.load8x8_u") I16X8_LOAD8X8_U = 0xfd02,
  @CodeAttr("i32x4.load16x4_s") I32X4_LOAD16X4_S = 0xfd03,
  @CodeAttr("i32x4.load16x4_u") I32X4_LOAD16X4_U = 0xfd04,
  @CodeAttr(
      "i64x2.load32x2_s") I64X2_LOAD32X2_S = 0xfd05,
  @CodeAttr("i64x2.load32x2_u") I64X2_LOAD32X2_U = 0xfd06,
  @CodeAttr("v8x16.load_splat") V8X16_LOAD_SPLAT = 0xfd07,
  @CodeAttr(
      "v16x8.load_splat") V16X8_LOAD_SPLAT = 0xfd08,
  @CodeAttr("v32x4.load_splat") V32X4_LOAD_SPLAT = 0xfd09,
  @CodeAttr("v64x2.load_splat") V64X2_LOAD_SPLAT = 0xfd0a,
  @CodeAttr(
      "v128.store") V128_STORE = 0xfd0b,
  @CodeAttr("v128.const") V128_CONST = 0xfd0c,
  @CodeAttr("v8x16.shuffle") V8X16_SHUFFLE = 0xfd0d,
  @CodeAttr("v8x16.swizzle") V8X16_SWIZZLE = 0xfd0e,
  @CodeAttr("i8x16.splat") I8X16_SPLAT = 0xfd0f,
  @CodeAttr("i16x8.splat") I16X8_SPLAT = 0xfd10,
  @CodeAttr("i32x4.splat") I32X4_SPLAT = 0xfd11,
  @CodeAttr("i64x2.splat") I64X2_SPLAT = 0xfd12,
  @CodeAttr(
      "f32x4.splat") F32X4_SPLAT = 0xfd13,
  @CodeAttr("f64x2.splat") F64X2_SPLAT = 0xfd14,
  @CodeAttr("i8x16.extract_lane_s") I8X16_EXTRACT_LANE_S = 0xfd15,
  @CodeAttr("i8x16.extract_lane_u") I8X16_EXTRACT_LANE_U = 0xfd16,
  @CodeAttr("i8x16.replace_lane") I8X16_REPLACE_LANE = 0xfd17,
  @CodeAttr("i16x8.extract_lane_s") I16X8_EXTRACT_LANE_S = 0xfd18,
  @CodeAttr("i16x8.extract_lane_u") I16X8_EXTRACT_LANE_U = 0xfd19,
  @CodeAttr("i16x8.replace_lane") I16X8_REPLACE_LANE = 0xfd1a,
  @CodeAttr("i32x4.extract_lane") I32X4_EXTRACT_LANE = 0xfd1b,
  @CodeAttr("i32x4.replace_lane") I32X4_REPLACE_LANE = 0xfd1c,
  @CodeAttr("i64x2.extract_lane") I64X2_EXTRACT_LANE = 0xfd1d,
  @CodeAttr("i64x2.replace_lane") I64X2_REPLACE_LANE = 0xfd1e,
  @CodeAttr("f32x4.extract_lane") F32X4_EXTRACT_LANE = 0xfd1f,
  @CodeAttr("f32x4.replace_lane") F32X4_REPLACE_LANE = 0xfd20,
  @CodeAttr("f64x2.extract_lane") F64X2_EXTRACT_LANE = 0xfd21,
  @CodeAttr("f64x2.replace_lane") F64X2_REPLACE_LANE = 0xfd22,
  @CodeAttr("i8x16.eq") I8X16_EQ = 0xfd23,
  @CodeAttr("i8x16.ne") I8X16_NE = 0xfd24,
  @CodeAttr("i8x16.lt_s") I8X16_LT_S = 0xfd25,
  @CodeAttr("i8x16.lt_u") I8X16_LT_U = 0xfd26,
  @CodeAttr("i8x16.gt_s") I8X16_GT_S = 0xfd27,
  @CodeAttr("i8x16.gt_u") I8X16_GT_U = 0xfd28,
  @CodeAttr("i8x16.le_s") I8X16_LE_S = 0xfd29,
  @CodeAttr("i8x16.le_u") I8X16_LE_U = 0xfd2a,
  @CodeAttr("i8x16.ge_s") I8X16_GE_S = 0xfd2b,
  @CodeAttr("i8x16.ge_u") I8X16_GE_U = 0xfd2c,
  @CodeAttr("i16x8.eq") I16X8_EQ = 0xfd2d,
  @CodeAttr("i16x8.ne") I16X8_NE = 0xfd2e,
  @CodeAttr("i16x8.lt_s") I16X8_LT_S = 0xfd2f,
  @CodeAttr("i16x8.lt_u") I16X8_LT_U = 0xfd30,
  @CodeAttr("i16x8.gt_s") I16X8_GT_S = 0xfd31,
  @CodeAttr("i16x8.gt_u") I16X8_GT_U = 0xfd32,
  @CodeAttr("i16x8.le_s") I16X8_LE_S = 0xfd33,
  @CodeAttr("i16x8.le_u") I16X8_LE_U = 0xfd34,
  @CodeAttr("i16x8.ge_s") I16X8_GE_S = 0xfd35,
  @CodeAttr("i16x8.ge_u") I16X8_GE_U = 0xfd36,
  @CodeAttr("i32x4.eq") I32X4_EQ = 0xfd37,
  @CodeAttr("i32x4.ne") I32X4_NE = 0xfd38,
  @CodeAttr("i32x4.lt_s") I32X4_LT_S = 0xfd39,
  @CodeAttr("i32x4.lt_u") I32X4_LT_U = 0xfd3a,
  @CodeAttr("i32x4.gt_s") I32X4_GT_S = 0xfd3b,
  @CodeAttr("i32x4.gt_u") I32X4_GT_U = 0xfd3c,
  @CodeAttr("i32x4.le_s") I32X4_LE_S = 0xfd3d,
  @CodeAttr("i32x4.le_u") I32X4_LE_U = 0xfd3e,
  @CodeAttr("i32x4.ge_s") I32X4_GE_S = 0xfd3f,
  @CodeAttr("i32x4.ge_u") I32X4_GE_U = 0xfd40,
  @CodeAttr("f32x4.eq") F32X4_EQ = 0xfd41,
  @CodeAttr("f32x4.ne") F32X4_NE = 0xfd42,
  @CodeAttr("f32x4.lt") F32X4_LT = 0xfd43,
  @CodeAttr("f32x4.gt") F32X4_GT = 0xfd44,
  @CodeAttr("f32x4.le") F32X4_LE = 0xfd45,
  @CodeAttr("f32x4.ge") F32X4_GE = 0xfd46,
  @CodeAttr("f64x2.eq") F64X2_EQ = 0xfd47,
  @CodeAttr("f64x2.ne") F64X2_NE = 0xfd48,
  @CodeAttr("f64x2.lt") F64X2_LT = 0xfd49,
  @CodeAttr("f64x2.gt") F64X2_GT = 0xfd4a,
  @CodeAttr("f64x2.le") F64X2_LE = 0xfd4b,
  @CodeAttr("f64x2.ge") F64X2_GE = 0xfd4c,
  @CodeAttr("v128.not") V128_NOT = 0xfd4d,
  @CodeAttr("v128.and") V128_AND = 0xfd4e,
  @CodeAttr("v128.andnot") V128_ANDNOT = 0xfd4f,
  @CodeAttr("v128.or") V128_OR = 0xfd50,
  @CodeAttr("v128.xor") V128_XOR = 0xfd51,
  @CodeAttr("v128.bitselect") V128_BITSELECT = 0xfd52,

  @CodeAttr("i8x16.abs") I8X16_ABS = 0xfd60,
  @CodeAttr("i8x16.neg") I8X16_NEG = 0xfd61,
  @CodeAttr("i8x16.any_true") I8X16_ANY_TRUE = 0xfd62,
  @CodeAttr("i8x16.all_true") I8X16_ALL_TRUE = 0xfd63,

  @CodeAttr("i8x16.narrow_i16x8_s") I8X16_NARROW_I16X8_S = 0xfd65,
  @CodeAttr(
      "i8x16.narrow_i16x8_u") I8X16_NARROW_I16X8_U = 0xfd66,

  @CodeAttr("i8x16.shl") I8X16_SHL = 0xfd6b,
  @CodeAttr("i8x16.shr_s") I8X16_SHR_S = 0xfd6c,
  @CodeAttr("i8x16.shr_u") I8X16_SHR_U = 0xfd6d,
  @CodeAttr("i8x16.add") I8X16_ADD = 0xfd6e,
  @CodeAttr("i8x16.add_saturate_s") I8X16_ADD_SATURATE_S = 0xfd6f,
  @CodeAttr("i8x16.add_saturate_u") I8X16_ADD_SATURATE_U = 0xfd70,
  @CodeAttr("i8x16.sub") I8X16_SUB = 0xfd71,
  @CodeAttr("i8x16.sub_saturate_s") I8X16_SUB_SATURATE_S = 0xfd72,
  @CodeAttr("i8x16.sub_saturate_u") I8X16_SUB_SATURATE_U = 0xfd73,

  @CodeAttr("i8x16.min_s") I8X16_MIN_S = 0xfd76,
  @CodeAttr("i8x16.min_u") I8X16_MIN_U = 0xfd77,
  @CodeAttr("i8x16.max_s") I8X16_MAX_S = 0xfd78,
  @CodeAttr("i8x16.max_u") I8X16_MAX_U = 0xfd79,

  @CodeAttr("i8x16.avgr_u") I8X16_AVGR_U = 0xfd7b,

  @CodeAttr("i16x8.abs") I16X8_ABS = 0xfd80,
  @CodeAttr("i16x8.neg") I16X8_NEG = 0xfd81,
  @CodeAttr("i16x8.any_true") I16X8_ANY_TRUE = 0xfd82,
  @CodeAttr("i16x8.all_true") I16X8_ALL_TRUE = 0xfd83,

  @CodeAttr("i16x8.narrow_i32x4_s") I16X8_NARROW_I32X4_S = 0xfd85,
  @CodeAttr(
      "i16x8.narrow_i32x4_u") I16X8_NARROW_I32X4_U = 0xfd86,
  @CodeAttr("i16x8.widen_low_i8x16_s") I16X8_WIDEN_LOW_I8X16_S = 0xfd87,
  @CodeAttr("i16x8.widen_high_i8x16_s") I16X8_WIDEN_HIGH_I8X16_S = 0xfd88,
  @CodeAttr("i16x8.widen_low_i8x16_u") I16X8_WIDEN_LOW_I8X16_U = 0xfd89,
  @CodeAttr("i16x8.widen_high_i8x16_u") I16X8_WIDEN_HIGH_I8X16_U = 0xfd8a,
  @CodeAttr("i16x8.shl") I16X8_SHL = 0xfd8b,
  @CodeAttr(
      "i16x8.shr_s") I16X8_SHR_S = 0xfd8c,
  @CodeAttr("i16x8.shr_u") I16X8_SHR_U = 0xfd8d,
  @CodeAttr("i16x8.add") I16X8_ADD = 0xfd8e,
  @CodeAttr("i16x8.add_saturate_s") I16X8_ADD_SATURATE_S = 0xfd8f,
  @CodeAttr("i16x8.add_saturate_u") I16X8_ADD_SATURATE_U = 0xfd90,
  @CodeAttr("i16x8.sub") I16X8_SUB = 0xfd91,
  @CodeAttr("i16x8.sub_saturate_s") I16X8_SUB_SATURATE_S = 0xfd92,
  @CodeAttr("i16x8.sub_saturate_u") I16X8_SUB_SATURATE_U = 0xfd93,

  @CodeAttr("i16x8.mul") I16X8_MUL = 0xfd95,
  @CodeAttr("i16x8.min_s") I16X8_MIN_S = 0xfd96,
  @CodeAttr("i16x8.min_u") I16X8_MIN_U = 0xfd97,
  @CodeAttr("i16x8.max_s") I16X8_MAX_S = 0xfd98,
  @CodeAttr("i16x8.max_u") I16X8_MAX_U = 0xfd99,

  @CodeAttr("i16x8.avgr_u") I16X8_AVGR_U = 0xfd9b,

  @CodeAttr("i32x4.abs") I32X4_ABS = 0xfda0,
  @CodeAttr("i32x4.neg") I32X4_NEG = 0xfda1,
  @CodeAttr("i32x4.any_true") I32X4_ANY_TRUE = 0xfda2,
  @CodeAttr("i32x4.all_true") I32X4_ALL_TRUE = 0xfda3,

  @CodeAttr("i32x4.widen_low_i16x8_s") I32X4_WIDEN_LOW_I16X8_S = 0xfda7,
  @CodeAttr("i32x4.widen_high_i16x8_s") I32X4_WIDEN_HIGH_I16X8_S = 0xfda8,
  @CodeAttr("i32x4.widen_low_i16x8_u") I32X4_WIDEN_LOW_I16X8_U = 0xfda9,
  @CodeAttr("i32x4.widen_high_i16x8_u") I32X4_WIDEN_HIGH_I16X8_U = 0xfdaa,
  @CodeAttr("i32x4.shl") I32X4_SHL = 0xfdab,
  @CodeAttr("i32x4.shr_s") I32X4_SHR_S = 0xfdac,
  @CodeAttr("i32x4.shr_u") I32X4_SHR_U = 0xfdad,
  @CodeAttr("i32x4.add") I32X4_ADD = 0xfdae,

  @CodeAttr("i32x4.sub") I32X4_SUB = 0xfdb1,

  @CodeAttr("i32x4.mul") I32X4_MUL = 0xfdb5,
  @CodeAttr("i32x4.min_s") I32X4_MIN_S = 0xfdb6,
  @CodeAttr("i32x4.min_u") I32X4_MIN_U = 0xfdb7,
  @CodeAttr("i32x4.max_s") I32X4_MAX_S = 0xfdb8,
  @CodeAttr("i32x4.max_u") I32X4_MAX_U = 0xfdb9,

  @CodeAttr("i64x2.neg") I64X2_NEG = 0xfdc1,

  @CodeAttr("i64x2.shl") I64X2_SHL = 0xfdcb,
  @CodeAttr("i64x2.shr_s") I64X2_SHR_S = 0xfdcc,
  @CodeAttr("i64x2.shr_u") I64X2_SHR_U = 0xfdcd,
  @CodeAttr("i64x2.add") I64X2_ADD = 0xfdce,

  @CodeAttr("i64x2.sub") I64X2_SUB = 0xfdd1,

  @CodeAttr("i64x2.mul") I64X2_MUL = 0xfdd5,

  @CodeAttr("f32x4.abs") F32X4_ABS = 0xfde0,
  @CodeAttr("f32x4.neg") F32X4_NEG = 0xfde1,

  @CodeAttr("f32x4.sqrt") F32X4_SQRT = 0xfde3,
  @CodeAttr("f32x4.add") F32X4_ADD = 0xfde4,
  @CodeAttr("f32x4.sub") F32X4_SUB = 0xfde5,
  @CodeAttr("f32x4.mul") F32X4_MUL = 0xfde6,
  @CodeAttr("f32x4.div") F32X4_DIV = 0xfde7,
  @CodeAttr("f32x4.min") F32X4_MIN = 0xfde8,
  @CodeAttr("f32x4.max") F32X4_MAX = 0xfde9,

  @CodeAttr("f64x2.abs") F64X2_ABS = 0xfdec,
  @CodeAttr("f64x2.neg") F64X2_NEG = 0xfded,

  @CodeAttr("f64x2.sqrt") F64X2_SQRT = 0xfdef,
  @CodeAttr("f64x2.add") F64X2_ADD = 0xfdf0,
  @CodeAttr("f64x2.sub") F64X2_SUB = 0xfdf1,
  @CodeAttr("f64x2.mul") F64X2_MUL = 0xfdf2,
  @CodeAttr("f64x2.div") F64X2_DIV = 0xfdf3,
  @CodeAttr("f64x2.min") F64X2_MIN = 0xfdf4,
  @CodeAttr("f64x2.max") F64X2_MAX = 0xfdf5,

  @CodeAttr("i32x4.trunc_sat_f32x4_s") I32X4_TRUNC_SAT_F32X4_S = 0xfdf8,
  @CodeAttr("i32x4.trunc_sat_f32x4_u") I32X4_TRUNC_SAT_F32X4_U = 0xfdf9,
  @CodeAttr("f32x4.convert_i32x4_s") F32X4_CONVERT_I32X4_S = 0xfdfa,
  @CodeAttr("f32x4.convert_i32x4_u") F32X4_CONVERT_I32X4_U = 0xfdfb,
}
